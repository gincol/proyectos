apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: apivigia-frontal
  name: apivigia-frontal
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: apivigia-frontal
  template:
    metadata:
      labels:
        k8s-app: apivigia-frontal
    spec:
      containers:
      - image: de.icr.io/vigia/apivigiafrontal:1.0.0
        name: apivigia-frontal
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          protocol: TCP
          name: http
        readinessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /services/vigia/frontal/monitor/liveness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 30
        env:
        - name: rest.client.apiConnect.auth.interceptor.clientId
          valueFrom:
            configMapKeyRef:
              name: credentials-imi-config
              key: CLIENT_ID
#      - image: forkdelta/fluentd-elasticsearch
#        name: apivigia-frontal-fluentd
#        env:
#        - name: FLUENTD_ARGS
#          value: fluentd -c /fluentd/etc/fluent.conf -v
#        - name: FLUENT_UID
#          value: "0"
#        volumeMounts:
#        - name: varlog
#          mountPath: /var/log/apivigiafrontal
#        - name: config-volume
#          mountPath: /fluentd/etc
#      volumes:
#      - name: varlog
#        emptyDir: {}
#      - name: config-volume
#        configMap:
#          name: fluentd-config-apivigiafrontal
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      
---
apiVersion: v1
kind: Service
metadata:
  name: apivigia-frontal
  labels:
    k8s-app: apivigia-frontal
  namespace: default
spec:
  ports:
  - port: 8080
    protocol: TCP
    name: http
    targetPort: 8080
  selector:
    k8s-app: apivigia-frontal
  type: NodePort
  